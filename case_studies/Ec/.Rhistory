if (!requireNamespace("remotes", quietly = TRUE))
install.packages("remotes")
remotes::install_github(
"qBioTurin/epimod_FBAfunctions",
ref      = "unified-epimod_FBAfunctions",
upgrade  = "never"
)
library(epimodFBAfunctions)
library(epimod)
0.0001*15
0.001*15
hypernode_name <- "Ec"
base_dir       <- getwd()                       # where you launch run.R
mat_dir        <- "models"                      # user *.mat* live here
cfg_yaml       <- "config/config_Ec.yaml"
bc_json        <- "config/boundary_conditions_Ec.json"
init_csv       <- "config/initial_data_Ec.csv"
overwrite_run  <- TRUE
debug_solver   <- FALSE                         # epimod::model.analysis()
# -------------------------------------------------------------------------
# 1. build the hyper-node (returns all useful sub-paths)
# -------------------------------------------------------------------------
paths <- build_hypernode(
hypernode_name           = hypernode_name,
config_yaml              = cfg_yaml,
boundary_conditions_file = bc_json,
initial_data = init_csv,
mat_dir                  = mat_dir,
base_dir                 = base_dir,
overwrite                = overwrite_run,
debug                    = debug_solver          # passed to epimod later
)
debug(build_hypernode)
# -------------------------------------------------------------------------
# 1. build the hyper-node (returns all useful sub-paths)
# -------------------------------------------------------------------------
paths <- build_hypernode(
hypernode_name           = hypernode_name,
config_yaml              = cfg_yaml,
boundary_conditions_file = bc_json,
initial_data             = init_csv,
mat_dir                  = mat_dir,
base_dir                 = base_dir,
overwrite                = overwrite_run,
debug                    = debug_solver          # passed to epimod later
)
# -------------------------------------------------------------------------
# 1. build the hyper-node (returns all useful sub-paths)
# -------------------------------------------------------------------------
paths <- build_hypernode(
hypernode_name           = hypernode_name,
config_yaml              = cfg_yaml,
boundary_conditions_file = bc_json,
initial_data             = init_csv,
mat_dir                  = mat_dir,
base_dir                 = base_dir,
overwrite                = overwrite_run,
debug                    = debug_solver          # passed to epimod later
)
# -------------------------------------------------------------------------
# 1. build the hyper-node (returns all useful sub-paths)
# -------------------------------------------------------------------------
paths <- build_hypernode(
hypernode_name           = hypernode_name,
config_yaml              = cfg_yaml,
boundary_conditions_file = bc_json,
initial_data             = init_csv,
mat_dir                  = mat_dir,
base_dir                 = base_dir,
overwrite                = overwrite_run,
debug                    = debug_solver          # passed to epimod later
)
cellular_units
# -------------------------------------------------------------------------
# 1. build the hyper-node (returns all useful sub-paths)
# -------------------------------------------------------------------------
paths <- build_hypernode(
hypernode_name           = hypernode_name,
config_yaml              = cfg_yaml,
boundary_conditions_file = bc_json,
initial_data             = init_csv,
mat_dir                  = mat_dir,
base_dir                 = base_dir,
overwrite                = overwrite_run,
debug                    = debug_solver          # passed to epimod later
)
cfg$cellular_units
vapply(cfg$cellular_units, `[[`, character(1),
"model_name")
vapply(model_names, find_mat, character(1))
as.numeric(vapply(cfg$cellular_units, `[[`,
character(1), "initial_count"))
cfg$cellular_units
vapply(cfg$cellular_units, `[[`,
character(1), "initial_count")
# -------------------------------------------------------------------------
# run.R – one-click demo for the “minimal-doublet” community
# -------------------------------------------------------------------------
if (!requireNamespace("remotes", quietly = TRUE))
install.packages("remotes")
remotes::install_github(
"qBioTurin/epimod_FBAfunctions",
ref      = "unified-epimod_FBAfunctions",
upgrade  = "never"
)
library(epimodFBAfunctions)
library(epimod)
# -------------------------------------------------------------------------
# user-editable knobs
# -------------------------------------------------------------------------
hypernode_name <- "Ec"
base_dir       <- getwd()                       # where you launch run.R
mat_dir        <- "models"                      # user *.mat* live here
cfg_yaml       <- "config/config_Ec.yaml"
bc_json        <- "config/boundary_conditions_Ec.json"
init_csv       <- "config/initial_data_Ec.csv"
overwrite_run  <- TRUE
debug_solver   <- FALSE                         # epimod::model.analysis()
# -------------------------------------------------------------------------
# 1. build the hyper-node (returns all useful sub-paths)
# -------------------------------------------------------------------------
paths <- build_hypernode(
hypernode_name           = hypernode_name,
config_yaml              = cfg_yaml,
boundary_conditions_file = bc_json,
initial_data             = init_csv,
mat_dir                  = mat_dir,
base_dir                 = base_dir,
overwrite                = overwrite_run,
debug                    = debug_solver          # passed to epimod later
)
